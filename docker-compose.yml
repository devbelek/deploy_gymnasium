services:
  web:
    build: ./backend
    command: gunicorn --workers 4 --threads 4 --worker-class gthread --bind 0.0.0.0:9000 Gimnasium.wsgi:application
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles 
      - media_volume:/app/media
    environment:
      - PYTHONUNBUFFERED=1
      - DJANGO_SETTINGS_MODULE=Gimnasium.settings
    deploy:
      resources:
        limits:
          memory: 1G
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      target: runner
    environment:
      - NODE_ENV=production
    deploy:
      resources:
        limits:
          memory: 1G
          
  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - web
      - frontend

  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  default:
    driver: bridge