# Generated by Django 5.0.6 on 2025-06-07 15:57

import ckeditor.fields
import django.core.validators
import django.db.models.deletion
import main.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('secondary', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', main.models.CompressedImageField(blank=True, null=True, upload_to='images/%Y/%m/%d/', verbose_name='Изображение')),
                ('content', ckeditor.fields.RichTextField(verbose_name='Контент')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
            ],
            options={
                'verbose_name': 'Фото-Галерея',
                'verbose_name_plural': 'Фото-Галерея',
            },
        ),
        migrations.CreateModel(
            name='Graduates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(db_index=True, max_length=25, verbose_name='Фамилия')),
                ('name', models.CharField(db_index=True, max_length=25, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=25, null=True, verbose_name='Отчество')),
                ('year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2025)], verbose_name='Год')),
                ('ort', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='ОРТ')),
            ],
            options={
                'verbose_name': 'Выпускники',
                'verbose_name_plural': 'Выпускники',
            },
        ),
        migrations.CreateModel(
            name='Teachers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(db_index=True, max_length=25, verbose_name='Фамилия')),
                ('name', models.CharField(db_index=True, max_length=25, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=25, null=True, verbose_name='Отчество')),
                ('image', main.models.CompressedImageField(blank=True, null=True, upload_to='images/%Y/%m/%d/', verbose_name='Изображение')),
                ('teachers_status', models.CharField(choices=[('Сейчас работает', 'Сейчас работает'), ('Раньше работал(а)', 'Раньше работал(а)')], default='Active', max_length=100, verbose_name='Статус')),
                ('experience', models.CharField(choices=[('Год', 'Более 1 года'), ('От пяти лет', 'Более 5 лет'), ('От десяти лет', 'Более 15 лет')], max_length=200, verbose_name='Опыт')),
                ('subject', models.CharField(max_length=200, verbose_name='Предмет')),
                ('subject_ky', models.CharField(max_length=200, null=True, verbose_name='Предмет')),
                ('subject_ru', models.CharField(max_length=200, null=True, verbose_name='Предмет')),
                ('education', models.TextField(blank=True, verbose_name='Образование')),
                ('education_ky', models.TextField(blank=True, null=True, verbose_name='Образование')),
                ('education_ru', models.TextField(blank=True, null=True, verbose_name='Образование')),
                ('successes', models.TextField(blank=True, verbose_name='Успехи')),
                ('successes_ky', models.TextField(blank=True, null=True, verbose_name='Успехи')),
                ('successes_ru', models.TextField(blank=True, null=True, verbose_name='Успехи')),
            ],
            options={
                'verbose_name': 'Учитель',
                'verbose_name_plural': 'Учителя',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('youtube_id', models.CharField(max_length=200, unique=True, verbose_name='Ссылка на видео')),
            ],
            options={
                'verbose_name': 'Видео-Галерея',
                'verbose_name_plural': 'Видео-Галерея',
                'db_table': 'main_video',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/', verbose_name='Изображение')),
                ('title', models.CharField(default='Заголовок', max_length=200, verbose_name='Заголовок')),
                ('title_ky', models.CharField(default='Заголовок', max_length=200, null=True, verbose_name='Заголовок')),
                ('title_ru', models.CharField(default='Заголовок', max_length=200, null=True, verbose_name='Заголовок')),
                ('description', ckeditor.fields.RichTextField(verbose_name='Описание')),
                ('description_ky', ckeditor.fields.RichTextField(null=True, verbose_name='Описание')),
                ('description_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Новости',
                'verbose_name_plural': 'Новости',
            },
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(db_index=True, max_length=25, verbose_name='Фамилия')),
                ('name', models.CharField(db_index=True, max_length=25, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=25, null=True, verbose_name='Отчество')),
                ('status_in_class', models.CharField(blank=True, choices=[('Президент', 'Президент'), ('Муж.совет', 'Муж.совет'), ('Жен.совет', 'Жен.совет')], max_length=200, null=True, verbose_name='Статус в классе')),
                ('administrator_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='secondary.administratortypes', verbose_name='Позиция')),
                ('olympian_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='secondary.namesofolympia', verbose_name='Олимпиец')),
                ('school_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='secondary.nameofgrades', verbose_name='Класс')),
                ('classroom_teacher', models.ManyToManyField(to='main.teachers', verbose_name='Классный руководитель')),
            ],
            options={
                'verbose_name': 'Ученики',
                'verbose_name_plural': 'Ученики',
            },
        ),
        migrations.CreateModel(
            name='SchoolParliament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_administrator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='secondary.administratortypes', verbose_name='Должность')),
                ('student', models.ManyToManyField(blank=True, to='main.students', verbose_name='Ученик')),
            ],
            options={
                'verbose_name': 'Координационный кенеш',
                'verbose_name_plural': 'Координационный кенеш',
            },
        ),
        migrations.CreateModel(
            name='Olympians',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(default='default_value', verbose_name='Год')),
                ('level', models.CharField(choices=[('level_1', 'Район'), ('level_2', 'Область'), ('level_3', 'Республика')], default='default_value', max_length=80, verbose_name='Уровень олимпиады')),
                ('place', models.CharField(choices=[('fist', '|'), ('second', '||'), ('third', '|||')], default='default_value', max_length=50, verbose_name='Место')),
                ('name_of_olympia', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='secondary.namesofolympia', verbose_name='Предмет')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.students', verbose_name='Ученик')),
            ],
            options={
                'verbose_name': 'Олимпийцы',
                'verbose_name_plural': 'Олимпийцы',
            },
        ),
        migrations.CreateModel(
            name='GimnasiumClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='secondary.nameofgrades', verbose_name='Класс')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.students', verbose_name='Ученик')),
            ],
            options={
                'verbose_name': 'Классы Гимназии №3',
                'verbose_name_plural': 'Классы Гимназии №3',
            },
        ),
        migrations.CreateModel(
            name='SuccessfulGraduates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', main.models.CompressedImageField(blank=True, null=True, upload_to='images/%Y/%m/%d/', verbose_name='Изображение')),
                ('content', ckeditor.fields.RichTextField(verbose_name='Контент')),
                ('content_ky', ckeditor.fields.RichTextField(null=True, verbose_name='Контент')),
                ('content_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Контент')),
                ('year', models.PositiveIntegerField(verbose_name='Год')),
                ('graduate', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.graduates', verbose_name='Выберите его(её) из списка')),
            ],
            options={
                'verbose_name': 'Успешные выпускники',
                'verbose_name_plural': 'Успешные выпускники',
            },
        ),
        migrations.AddField(
            model_name='graduates',
            name='kl_rukovoditel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='graduates_teachers', to='main.teachers', verbose_name='Классный руководитель'),
        ),
        migrations.AddIndex(
            model_name='students',
            index=models.Index(fields=['school_class'], name='main_studen_school__135546_idx'),
        ),
        migrations.AddIndex(
            model_name='students',
            index=models.Index(fields=['olympian_status'], name='main_studen_olympia_eed431_idx'),
        ),
        migrations.AddIndex(
            model_name='students',
            index=models.Index(fields=['administrator_status'], name='main_studen_adminis_80a678_idx'),
        ),
    ]
